// Generated by Dagger (https://dagger.dev).
package com.yzdev.mobiletest.di;

import android.content.Context;
import com.yzdev.mobiletest.data.dataSource.DbDataSource;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DataSourceModule_DbDataSourceFactory implements Factory<DbDataSource> {
  private final DataSourceModule module;

  private final Provider<Context> contextProvider;

  public DataSourceModule_DbDataSourceFactory(DataSourceModule module,
      Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public DbDataSource get() {
    return dbDataSource(module, contextProvider.get());
  }

  public static DataSourceModule_DbDataSourceFactory create(DataSourceModule module,
      Provider<Context> contextProvider) {
    return new DataSourceModule_DbDataSourceFactory(module, contextProvider);
  }

  public static DbDataSource dbDataSource(DataSourceModule instance, Context context) {
    return Preconditions.checkNotNullFromProvides(instance.dbDataSource(context));
  }
}
