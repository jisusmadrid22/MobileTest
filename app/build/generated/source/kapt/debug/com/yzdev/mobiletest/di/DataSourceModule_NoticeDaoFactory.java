// Generated by Dagger (https://dagger.dev).
package com.yzdev.mobiletest.di;

import com.yzdev.mobiletest.data.dataSource.DbDataSource;
import com.yzdev.mobiletest.data.dataSource.NoticeDao;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DataSourceModule_NoticeDaoFactory implements Factory<NoticeDao> {
  private final DataSourceModule module;

  private final Provider<DbDataSource> dbProvider;

  public DataSourceModule_NoticeDaoFactory(DataSourceModule module,
      Provider<DbDataSource> dbProvider) {
    this.module = module;
    this.dbProvider = dbProvider;
  }

  @Override
  public NoticeDao get() {
    return noticeDao(module, dbProvider.get());
  }

  public static DataSourceModule_NoticeDaoFactory create(DataSourceModule module,
      Provider<DbDataSource> dbProvider) {
    return new DataSourceModule_NoticeDaoFactory(module, dbProvider);
  }

  public static NoticeDao noticeDao(DataSourceModule instance, DbDataSource db) {
    return Preconditions.checkNotNullFromProvides(instance.noticeDao(db));
  }
}
